syntax id = ID text
syntax tid = TID text
syntax tids = tid*

syntax type

syntax terms
syntax structElems
syntax term =
  | UNIT                        ;; Unit term `()`
  | id                          ;; `x`
  | LET id `= term IN term      ;; let binding `let x = e in e`
  | ASSIGN term `= term         ;; assignment `x := e`, originally lv
  | SEQ term `; term            ;; sequence `e; e`
  | REF term                    ;; `&e`, originally lv
  | DEREF term                  ;; `*e`
  | APP term `( terms )         ;; `e(es)
  | TYPECAST term AS type       ;; `e as typ`
  | STRUCT id structElems       ;; `S<x:e list>`
  | MEMBER term id              ;; `e.x`

syntax terms = term*
syntax structElem = id `: term
syntax structElems = structElem*

syntax vartype = id `: type
syntax vartypes = vartype*

syntax func =
  | FN id tids vartypes `-> 

syntax item =
  | FUNC
  | STRUCT
  | TRAIT
  | IMPL

syntax pgm = item*